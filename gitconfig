[user]
	email = matee@matee.net
  name = matee
  signingkey = 24BDBD1F964B3793
  #email = pep8@redefine.pl
  #name = pep8
[color]
  ui = true
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  pager = true
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
[core]
  whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
  editor = vim
  excludesfile = ~/.gitignore_global
  # Uroki OSX http://superuser.com/questions/777617/line-wrapping-less-in-os-x-specifically-for-use-with-git-diff
  #pager = fold -w 120|less -FRSX
  pager = less -r
[status]
  submodulesummary = 1
[diff]
  # Make diffs shorter when moving/copying files
  rename = copy
  # Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
  # instead of a/b/c/d as prefixes for patches
  mnemonicprefix = true
[branch]
  # autosetuprebase = always
[merge]
  summary = true
  verbosity = 1
[push]
  default = upstream
[gc]
  auto = 1
[alias]
  co = checkout
  cl = clone
  scl = clone --depth=1 --single-branch
  di = diff
  lll = log --oneline  # Logs: one line per commit; useful for finding a hash of the right commit
  ll = "!git --no-pager log --format="%Cgreen%h%Creset%x09%Cblue%an%Creset%x09%s" HEAD~10..HEAD"
  bl = "!git --no-pager log --oneline master~1..HEAD"
  pl = pull
  plr = pull --rebase
  pu = push
  puf = push --force
  ri = rebase -i      # Interactive rebase
  ar = rebase -i --autosquash
  bar = rebase -i --autosquash master~1
  s = show
  st = status -sb     # Short format
  sv = status -vv     # Verbose format containing diffs for unstaged changes
  ffm = merge --ff-only


  amend = commit --amend
  fix = commit --fixup
  f = commit --fixup

  # List added and changed files (.py) in a branch (comparing to the master); i.e. `git pyqa|xargs flake8` if you only care for touched files
  pyqa = "!git diff --stat --name-status master |grep -E '.py$'|grep -vE '^D'|awk '{print $2}'"


  # finda = "!grepalias() { git config --global --get-regexp alias | grep -i \"$1\" | awk -v nr=2 '{sub(/^alias\\./,\"\")};{printf \"\\033[31m%_10s\\033[1;37m\", $1};{sep=FS};{for (x=nr; x<=NF; x++) {printf \"%s%s\", sep, $x; }; print \"\\033[0;39m\"}'; }; grepalias"

  # Diff
  # dh = diff HEAD
  # dc = diff --cached
  # w = whatchanged
  # wdi = diff --color-words

  # Rebase
  # ready = rebase -i @{u}

  # Log
  # rdi = log --no-merges --stat @{1}..
  # ls = ls-files
  # ignored = ls-files --others -i --exclude-standard
  # lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset %C(blue)%an%Creset' --abbrev-commit
  # less = log --pretty=format:\"%C(yellow)%h%Cred%d %Creset%s%Cblue [%cn]\" --decorate
  # changes = log --pretty=format:':%C(yellow)%h%Cred%d%Creset %s %C(cyan) %an, %ar%Creset' --name-status
  # standup = !"git log --reverse --branches --since=$(if [[ "Mon" == "$(date +%a)" ]]; then echo "last friday"; else echo "yesterday"; fi) --author=$(git config --get user.email) --format=format:'%C(cyan) %ad %C(yellow)%h %Creset %s %Cgreen%d' --date=local"

  # Creates/deletes the current branch at the remote origin repo
  publish = !sh -c 'CURRENT=$(git symbolic-ref HEAD | sed -e s@.*/@@) \
        && git push --set-upstream origin $CURRENT:$CURRENT'
  unpublish = !sh -c 'CURRENT=$(git symbolic-ref HEAD | sed -e s@.*/@@) \
        && git push origin :$CURRENT'

  # Remote
  # rem = remote

  # Revert
  # rv = revert
  # rs = reset
  # unsage = reset HARD
  # uncommit = reset --soft 'HEAD^'
  # pointbranchto = reset --hard
  # wipe = reset --hard HEAD

  # Stash
  ss = stash  # stash changes
  sl = stash list # list stashes
  sa = stash apply    # apply stash (restore changes)
  sd = stash drop     # drop stashes (destroy changes)

  # Config
  info = config --list

  # Old branches
  merged = !sh -c 'git branch --merged master | grep -v master'
  rmerged = !sh -c 'git branch -r --merged master | grep -v master'

[difftool "sourcetree"]
  cmd = opendiff \"$LOCAL\" \"$REMOTE\"
  path =
[mergetool "sourcetree"]
  cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
  trustExitCode = true
#[commit]
#  gpgsign = true
